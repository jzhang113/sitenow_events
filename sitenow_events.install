<?php

/**
 * @file
 *
 * Install and uninstall tasks for SiteNow Events
 */

/**
 * Implements hook_enable().
 * Create sitenow events date formats, types and variables
 */
function sitenow_events_enable() {
  $types = array(
    array(
      'type' => 'sitenow_events_date_type',
      'title' => t('Sitenow Events Date Type'),
      'locked' => TRUE,
      'is_new' => TRUE,
    ),
    array(
      'type' => 'sitenow_events_date_type_day',
      'title' => t('Sitenow Events Day'),
      'locked' => TRUE,
      'is_new' => TRUE,
    ),
    array(
      'type' => 'sitenow_events_date_type_short_month',
      'title' => t('Sitenow Events Short Month'),
      'locked' => TRUE,
      'is_new' => TRUE,
    ),
    array(
      'type' => 'sitenow_events_date_type_month',
      'title' => t('Sitenow Events Month'),
      'locked' => TRUE,
      'is_new' => TRUE,
    ),
    array(
      'type' => 'sitenow_events_date_type_time',
      'title' => t('Sitenow Events Time'),
      'locked' => TRUE,
      'is_new' => TRUE,
    ),
  );

  foreach ($types as $type) {
    // save the type
    system_date_format_type_save($type);
  }

  $formats = array(
    array(
      'type'    => 'sitenow_events_date_type',
      'format'  => 'l F j, Y', // Jan 01, 2013
      'locked' => TRUE,
      'is_new' => TRUE,
    ),
    array(
      'type'    => 'sitenow_events_date_type_day',
      'format'  => 'd', // 01
      'locked' => TRUE,
      'is_new' => TRUE,
    ),
    array(
      'type'    => 'sitenow_events_date_type_short_month',
      'format'  => 'M', // Jan
      'locked' => TRUE,
      'is_new' => TRUE,
    ),
    array(
      'type'    => 'sitenow_events_date_type_month',
      'format'  => 'F', // January
      'locked' => TRUE,
      'is_new' => TRUE,
    ),
    array(
      'type'    => 'sitenow_events_date_type_time',
      'format'  => 'g:ia', // 12:00am
      'locked' => TRUE,
      'is_new' => TRUE,
    ),
  );

  foreach ($formats as $date_format) {
    // save the format
    system_date_format_save($date_format, $dfid = 0);
    // save the variable
    variable_set('date_format_' . $date_format['type'], $date_format['format']);
  }

  // Revert the sitenow_events feature.
  $feature = features_get_features('sitenow_events');
  $components = array_keys($feature->info['features']);
  features_revert(array('sitenow_events' => $components));
}

/**
 * Implements hook_disable().
 */
function sitenow_events_disable() {
  // Remove Sitenow Events date formats, types and variables.
  $types = array(
    'sitenow_events_date_type',
    'sitenow_events_date_type_day',
    'sitenow_events_date_type_short_month',
    'sitenow_events_date_type_month',
    'sitenow_events_date_type_time',
  );
  foreach ($types as $type) {
    // delete variables
    variable_del('date_format_' . $type);
    // delete types
    system_date_format_type_delete($type);
  }

  // Gather all the content that might have been created while this
  // module was enabled. Simple selects still use db_query().
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'event'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once.
  node_delete_multiple($nids);

  // Loop over each of the fields used by only the event content type and delete
  // all instances of the field, their data, and the field itself.
  foreach (field_info_field_map() as $field_name => $field_info) {
    if (array_key_exists('node', $field_info['bundles'])) {
      if (in_array('event', $field_info['bundles']['node'])) {        
        if (count($field_info['bundles']['node'] == 1)) {
          field_delete_field($field_name);
        }
      }
    }
  }

  // Loop over any remaining field instances attached to the event content type
  // and delete them individually.
  $instances = field_info_instances('node', 'event');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete the event content type.
  node_type_delete('event');

  // Delete the event_type taxonomy.
  $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'event_type'")->fetchField();
  taxonomy_vocabulary_delete($vid);

  // Purge all field information.
  field_purge_batch(1000);

  // Disable submodules of SiteNow Events
  $module_list = array('sitenow_events_panelizer', 'sitenow_events_panels',);
  $disable_dependents = FALSE;
  module_disable($module_list, $disable_dependents);
}
